export declare function toBigIntLE(buf: Uint8Array): bigint;
export declare function writeBufferLEBigInt(num: bigint | number, width: number, buffer: Uint8Array, offset: number): void;
export declare function writeUInt32LE(value: number, buf: Uint8Array, offset: number): void;
export declare function writeUInt16LE(value: number, buf: Uint8Array, offset: number): void;
export declare const writeBigUint64Le: (bigIntOrNumber: bigint | number, buf: Uint8Array, offset: number) => void;
export declare const readBigUInt64LE: (buf: Uint8Array, offset: number) => bigint;
export declare function readUIntLE(buf: Uint8Array, offset: number, width: number): bigint;
export declare const readUInt32LE: (buffer: Uint8Array, offset: number) => number;
export declare const readUInt16LE: (buffer: Uint8Array, offset: number) => number;
export declare const checkInt: (value: number | bigint, min: number | bigint, max: number | bigint, byteLength: number) => void;
